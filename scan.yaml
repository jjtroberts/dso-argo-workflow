apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: dag-scan-
spec:
  entrypoint: scan

  securityContext:
    runAsUser: 0

  imagePullSecrets:
    - name: registry1
  
  volumeClaimTemplates:
  - metadata: 
      name: task-pv-storage
    spec: 
      accessModes: [ "ReadWriteOnce" ] 
      resources: 
        requests: 
          storage: 1Gi 

  volumes:
    - name: registry1
      secret:
        secretName: registry1
    - name: "gcs-service-account"
      secret:
        secretName: "gcs-service-account"

################################### 
######## GLOBAL CONFIGURAION ###### 
################################### 
  arguments: 
    parameters: 
  #### GCP SETTINGS ################# 
    - name: gcp-project-id
      value: platform-one-lab
    - name: argo-bucket-name
      value: rackner-argo
  #### EXECUTION IMAGES ############
    - name: gs-image
      value: google/cloud-sdk:latest
    - name: syft-image
      value: anchore/syft:v0.46.2
    - name: grype-image
      value: anchore/grype:v0.38.0
    - name: trivy-image
      value: aquasec/trivy:0.28.0
    - name: scan-image
      value: registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.6
  #### OSCAP SETTINGS ############
    - name: compliance-as-code-release
      value: "https://github.com/ComplianceAsCode/content/releases/download/v0.1.61/scap-security-guide-0.1.61-oval-5.10.zip"
    - name: scap-security-guide-version
      value: "scap-security-guide-0.1.61-oval-5.10"
    - name: stig
      value: "ssg-rhel8-ds.xml"
    

  templates:

  ## START TEMPLATES ##
  # skopeo was a failure as it requires a RHEL node, but leaving for reference
  - name: skopeo
    container:
      image: quay.io/skopeo/stable:v1.7.0
      command: [
        "skopeo",
        "copy",
        "--authfile=/credentials/.dockerconfigjson",
        "--remove-signatures",
        "docker://'{{workflow.parameters.scan-image}}",
        "dir:/data/skopeo/image"
      ]
      volumeMounts:
        - mountPath: "/data/skopeo"
          name: task-pv-storage
        - name: registry1
          mountPath: "/credentials"

  # 2m
  - name: syft
    container:
      image: '{{workflow.parameters.syft-image}}'
      command: [
        "/syft", 
        "-v", 
        "packages", 
        "{{workflow.parameters.scan-image}}", 
        "-o", "json", 
        "--file", "/data/syft.json"
      ]
      env:
        - name: DOCKER_CONFIG
          value: "/credentials"
      volumeMounts:
        - mountPath: "/data"
          name: task-pv-storage
        - name: registry1
          mountPath: "/credentials"

  # 1m
  - name: grype
    container:
      image: '{{workflow.parameters.grype-image}}'
      command: [
        "/grype", 
        "-v", 
        "sbom:/data/syft.json", 
        "-o", "json",  
        "--file", "/data/grype.json"
      ]
      env:
        - name: DOCKER_CONFIG
          value: "/credentials"
      volumeMounts:
        - mountPath: "/data"
          name: task-pv-storage
        - name: registry1
          mountPath: "/credentials"
          readOnly: true

  # 1m
  - name: trivy
    container:
      image: '{{workflow.parameters.trivy-image}}'
      command: [
        "/usr/local/bin/trivy", 
        "image", 
        "-f", "json", 
        "-o", "/data/trivy.json", 
        "{{workflow.parameters.scan-image}}"]
      env:
        - name: DOCKER_CONFIG
          value: "/credentials"
      volumeMounts:
        - mountPath: "/data"
          name: task-pv-storage
        - name: registry1
          mountPath: "/credentials"
          readOnly: true

  # 5m
  - name: openscap
    container:
      image: '{{workflow.parameters.scan-image}}'
      command:
        - bash
        - -c
        - |
          dnf install -y --nodocs openscap-scanner bzip2 wget unzip && \
          wget {{workflow.parameters.compliance-as-code-release}} && \
          unzip {{workflow.parameters.scap-security-guide-version}}.zip && \
          oscap xccdf eval \
            --verbose ERROR \
            --fetch-remote-resources \
            --profile "xccdf_org.ssgproject.content_profile_stig" \
            --rule xccdf_org.ssgproject.content_rule_file_ownership_binary_dirs \
            --results /data/oscap_compliance_output_report.xml \
            --report /data/oscap_report.html \
            "{{workflow.parameters.scap-security-guide-version}}/{{workflow.parameters.stig}}"
      volumeMounts:
        - mountPath: "/data"
          name: task-pv-storage

  - name: export
    container:
      image: google/cloud-sdk:latest
      env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/service-account.json"
      #command: ["sleep"]
      #args: ["infinity"]
      command:
        - bash
        - -c
        - |
          gcloud auth activate-service-account --key-file=/var/run/secret/cloud.google.com/service-account.json
          gsutil -m cp /data/* gs://{{workflow.parameters.argo-bucket-name}}
      volumeMounts:
        - mountPath: "/data"
          name: task-pv-storage
        - name: "gcs-service-account"
          mountPath: "/var/run/secret/cloud.google.com"

  ## END TEMPLATES ##

  # DAG
  - name: scan
    dag:
      tasks:
      # - name: pull-image
      #   template: skopeo
      - name: generate-sbom
        #dependencies: [pull-image]
        template: syft
      - name: grype-scan
        dependencies: [generate-sbom]
        template: grype
      - name: openscap-scan
        template: openscap
      - name: trivy-scan
        template: trivy
      - name: export-files
        dependencies: [generate-sbom, grype-scan, trivy-scan]
        template: export